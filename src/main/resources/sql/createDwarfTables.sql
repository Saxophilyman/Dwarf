-- Таблица Squads
--
-- | Field        | Type         | Description                               |
-- |--------------|--------------|-------------------------------------------|
-- | squad_id     | INT          | Уникальный идентификатор отряда           |
-- | name         | VARCHAR(100) | Название отряда                           |
-- | mission      | VARCHAR(100) | Текущая миссия отряда                     |

CREATE table Squads
(
    squad_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name     VARCHAR(100) NOT NULL,
    mission  VARCHAR(100)
);

-- Комментарии к полям
COMMENT ON COLUMN Squads.squad_id IS 'Уникальный идентификатор отряда';
COMMENT ON COLUMN Squads.name IS 'Название отряда';
COMMENT ON COLUMN Squads.mission IS 'Текущая миссия отряда';

-- Таблица Dwarves
--
-- | Field        | Type         | Description                               |
-- |--------------|--------------|-------------------------------------------|
-- | dwarf_id     | INT          | Уникальный идентификатор гнома            |
-- | name         | VARCHAR(100) | Имя гнома                                 |
-- | age          | INT          | Возраст гнома                             |
-- | profession   | VARCHAR(100) | Профессия гнома                           |
-- | squad_id     | INT          | Идентификатор отряда
--                                 (NULL, если не в отряде)                  |

CREATE TABLE Dwarves
(
    dwarf_id   INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, -- автоинкрементное поле
    name       VARCHAR(100) NOT NULL,
    age        INT CHECK (age >= 0),                             -- минимальный возраст
    profession VARCHAR(100),
    squad_id   INT,
    CONSTRAINT fk_dwarves_squad
        FOREIGN KEY (squad_id)
            REFERENCES Squads (squad_id)
            ON DELETE SET NULL
);

-- 🔹 Более читаемо при большом количестве ограничений
-- 🔹 Ты сам задаёшь имя внешнего ключа
-- 🔹 Это имя будет видно в ошибках PostgreSQL, в pgAdmin, EXPLAIN, логах
-- 🔹 Легко переиспользовать при ALTER, DROP CONSTRAINT, и т. д.
-- В промышленных проектах (особенно с микросервисами, DevOps, CI/CD, авто-миграциями)
-- почти всегда используют CONSTRAINT ... с явными именами.


-- Комментарии:
COMMENT ON COLUMN Dwarves.dwarf_id IS 'Уникальный идентификатор гнома';
COMMENT ON COLUMN Dwarves.name IS 'Имя гнома';
COMMENT ON COLUMN Dwarves.age IS 'Возраст гнома';
COMMENT ON COLUMN Dwarves.profession IS 'Профессия гнома';
COMMENT ON COLUMN Dwarves.squad_id IS 'Идентификатор отряда (NULL, если не в отряде)';

-- Таблица Tasks
--
-- | Field        | Type         | Description                               |
-- |--------------|--------------|-------------------------------------------|
-- | task_id      | INT          | Уникальный идентификатор задачи           |
-- | description  | VARCHAR(255) | Описание задачи                           |
-- | priority     | INT          | Приоритет задачи                          |
-- | assigned_to  | INT          | Идентификатор гнома, ответственного за задачу
--                                 (NULL, если не назначена)                 |
-- | status       | VARCHAR(50)  | Статус задачи
--                         (например, 'pending', 'in_progress', 'completed') |

CREATE TABLE Tasks
(
    task_id     INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    description VARCHAR(255) NOT NULL,
    priority    INT CHECK (priority >= 1 AND priority <= 10),
    assigned_to INT,
    status      VARCHAR(50) NOT NULL,

    -- Внешний ключ на гнома (может быть NULL)
    CONSTRAINT fk_task_assignee
        FOREIGN KEY (assigned_to)
        REFERENCES Dwarves (dwarf_id)
        ON DELETE SET NULL,

    -- Ограничение допустимых статусов
    CONSTRAINT chk_task_status
        CHECK (status IN ('pending', 'in_progress', 'completed'))
);

-- Комментарии к полям
COMMENT ON COLUMN Tasks.task_id IS 'Уникальный идентификатор задачи';
COMMENT ON COLUMN Tasks.description IS 'Описание задачи';
COMMENT ON COLUMN Tasks.priority IS 'Приоритет задачи (1–10)';
COMMENT ON COLUMN Tasks.assigned_to IS 'Идентификатор гнома, ответственного за задачу (NULL, если не назначена)';
COMMENT ON COLUMN Tasks.status IS 'Статус задачи (например, pending, in_progress, completed)';


-- Таблица Items
--
-- | Field        | Type         | Description                               |
-- |--------------|--------------|-------------------------------------------|
-- | item_id      | INT          | Уникальный идентификатор предмета         |
-- | name         | VARCHAR(100) | Название предмета                         |
-- | type         | VARCHAR(100) | Тип предмета
--                                 (например, 'weapon', 'armor', 'tool')     |
-- | owner_id     | INT          | Идентификатор гнома-владельца
--                                 (NULL, если предмет общий)                |

CREATE TABLE Items (
    item_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    type VARCHAR(100) NOT NULL,
    owner_id INT,

    -- Внешний ключ на гнома-владельца (может быть NULL)
    CONSTRAINT fk_item_owner
        FOREIGN KEY (owner_id)
            REFERENCES Dwarves (dwarf_id)
            ON DELETE SET NULL,

    -- Ограничение допустимых типов предмета
    CONSTRAINT chk_item_type
        CHECK (type IN ('weapon', 'armor', 'tool'))
);

-- Комментарии к полям
COMMENT ON COLUMN Items.item_id IS 'Уникальный идентификатор предмета';
COMMENT ON COLUMN Items.name IS 'Название предмета';
COMMENT ON COLUMN Items.type IS 'Тип предмета (например, ''weapon'', ''armor'', ''tool'')';
COMMENT ON COLUMN Items.owner_id IS 'Идентификатор гнома-владельца (NULL, если предмет общий)';
